* Introduction
* Step by step installation OpenGTS documentation recommendations June 11, 2014 
  1. [X] Install Apache Tomcat
     1. [X] Skim https://wiki.archlinux.org/index.php/Tomcat
     2. [X] install tomcat7 package
        #+BEGIN_SRC sh :tangle bin/install-tomcat.sh :shebang #!/bin/sh
          sudo pacman --sync tomcat7
        #+END_SRC
	- Packages (10): ca-certificates-java-20140324-2  eclipse-ecj-4.3.1-1  java-commons-daemon-1.0.15-1  java-jsvc-1.0.15-1  jre7-openjdk-7.u55_2.4.7-1 jre7-openjdk-headless-7.u55_2.4.7-1  nss-3.16.1-1  xdg-utils-1.1.0.git20140426-1  xorg-xset-1.2.3-1  tomcat7-7.0.54-1
     3. [X] sudo systemctl start tomcat7
     4. [X] sudo systemctl enable tomcat7
     5. [X] Test that tomcat is running by viewing http://localhost:8080/ in a web browser
  2. [X] start and enable mysql daemon
     #+BEGIN_SRC sh :tangle bin/enable-mysql-daemon.sh :shebang #!/bin/sh
       # sudo pacman --sync mariadb
       sudo systemctl start mysqld
       sudo systemctl enable mysqld
     #+END_SRC
  3. [X] Install apache ant
     #+BEGIN_SRC sh
       sudo pacman --sync apache-ant
     #+END_SRC
     - Packages (2): jdk7-openjdk-7.u65_2.5.1-3  apache-ant-1.9.4-2
  4. [X] Install JDBC
     1. [X] Skim https://wiki.archlinux.org/index.php/JDBC_and_MySQL#Installing_JDBC
     2. [X] wget https://aur.archlinux.org/packages/my/mysql-jdbc/mysql-jdbc.tar.gz
	#+BEGIN_SRC sh :tangle bin/fetch-mysql-jdbc-uar.sh :shebang #!/bin/sh
	  wget https://aur.archlinux.org/packages/my/mysql-jdbc/mysql-jdbc.tar.gz
	#+END_SRC
     3. [X] descend into AUR/mysql-jdbc
     4. [X] makepkg
     5. [X] sudo pacman --upgrade mysql-jdbc-5.1.31-1-i686.pkg.tar.xz
     6. [X] copy mysql-connector-java-5.1.31-bin.jar to /usr/lib/jvm/java-7-openjdk/jre/lib/ext/
	#+BEGIN_SRC sh :tangle bin/copy-mysql-connector.sh :shebang #!/bin/sh
          VERSION="5.1.31"
          FILE="/usr/share/java/mysql-jdbc/mysql-connector-java-${VERSION}-bin.jar"
          DEST_DIR="/usr/lib/jvm/java-7-openjdk/jre/lib/ext/"
          
          sudo cp -iv $FILE $DEST_DIR
	#+END_SRC
  5. [X] Install Java Mail
     1. [X] Skim https://java.net/projects/javamail/pages/Home
     2. [X] Download javax.mail-1.5.2.jar
	#+BEGIN_SRC sh :tangle bin/download-javax.mail.sh :shebang #!/bin/sh
          VER="1.5.2"
          wget https://maven.java.net/content/repositories/releases/com/sun/mail/javax.mail/${VER}/javax.mail-${VER}.jar
          md5sum javax.mail-${VER}.jar
                    
          # 5faf8e62e75b1fa09acf038546187aa7  javax.mail-1.5.2.jar
          
	#+END_SRC
     3. [X] copy javax.mail-1.5.2.jar to $JAVA_HOME/jre/lib/ext/
	#+BEGIN_SRC sh :tangle bin/copy-javax.mail.sh :shebang #!/bin/sh
          # works on Arch Linux
          VER="1.5.2"
          JAVA_HOME="/usr/lib/jvm/java-7-openjdk/"
          sudo cp -v javax.mail-${VER}.jar $JAVA_HOME/jre/lib/ext/
	#+END_SRC
  6. [X] Download and install the OpenGTS source
     1. [X] Download OpenGTS_2.5.5.zip to ~/Downloads
	1. [X] View http://sourceforge.net/projects/opengts/?source=dlp with web browser
	2. [X] Download OpenGTS_2.5.5.zip to ~/Downloadss
     2. [X] install OpenGTS to /usr/local
	+ Run as this script as normal user
        + You may have to install unzip
        #+BEGIN_SRC sh :tangle bin/install-opengts.sh :shebang #!/bin/sh
          VER="2.5.5"
          # Download OpenGTS_${VER}.zip from http://sourceforge.net/projects/opengts/?source=dlp
          GROUP="users"
          ZIP_FILE=~/Downloads/OpenGTS_${VER}.zip
          cd /usr/local
          sudo unzip $ZIP_FILE
          echo "Changing ownership to user ${USER}"
          sudo chown --recursive $USER:$GROUP OpenGTS_${VER}
        #+END_SRC
     3. [X] Set the Environment Variables
	+ Edit add following lines to /etc/profile:
        #+BEGIN_SRC sh :tangle /tmp/profile.opengts
        # The Java JDK (NOT the JRE) installation directory.
        export JAVA_HOME=/usr/lib/jvm/java-7-openjdk
        # The Apache Ant installation directory.
        export ANT_HOME=/usr/share/apache-ant
        # The Apache Tomcat installation directory.
        export CATALINA_HOME=/usr/share/tomcat7
        # The OpenGTS installation directory.
        export GTS_HOME=/usr/local/OpenGTS_2.5.5
        #+END_SRC
     4. [X] source /etc/profile
	#+BEGIN_SRC sh
	  source /etc/profile
	#+END_SRC
     5. [X] Make symbolic links
        #+BEGIN_SRC sh :tangle bin/make-links.sh :shebang #!/bin/bash
          set -o nounset
          # Run as root
          
          JAVA_HOME="/usr/lib/jvm/java-7-openjdk"
          ANT_HOME="/usr/share/apache-ant"
          CATALINA_HOME="/usr/share/tomcat7"
          GTS_HOME="/usr/local/OpenGTS_2.5.5"
          
          cd /usr/local
          
          ln -sv $JAVA_HOME java
          ln -sv $CATALINA_HOME tomcat
          ln -sfv $GTS_HOME gts
        #+END_SRC
     6. [X] Compile the Supporting GTS Library Files.
        1. [X] 'cd' into the OpenGTS installation directory and
           compile the jar files, and servlet war files, using the
           supplied Ant "build.xml" script:
           #+BEGIN_SRC sh
             cd $GTS_HOME
             ant all
           #+END_SRC
  7. [X] Initialize the SQL Database Tables
     #+BEGIN_SRC sh :tangle bin/initialize-tables.sh :shebang #!/bin/sh
        cd $GTS_HOME
        bin/initdb.sh -rootUser=root
     #+END_SRC
  8. [X] Test the installation
     #+BEGIN_SRC sh
       bin/checkInstall.sh
     #+END_SRC
  9. [X] (optional) Load the sample data
     #+BEGIN_SRC sh
     #+END_SRC
  10. [X] Create the sysadmin account
      #+BEGIN_SRC sh
         bin/admin.sh Account -account=sysadmin -pass=password -create
      #+END_SRC
  11. [X] Create additional account
      #+BEGIN_SRC sh :tangle /tmp/create-additional-account.sh :shebang #!/bin/sh
         bin/admin.sh Account -account=FOO -pass=password -create
      #+END_SRC
  12. [X] Install track.war
      1. [X] Build
         #+BEGIN_SRC sh
           cd $GTS_HOME && ant track
         #+END_SRC
      2. [X] Copy track.war
         #+BEGIN_SRC sh
           sudo cp -v build/track.war $CATALINA_HOME/webapps
         #+END_SRC
  13. [-] Install events.war Java servlet
      1. [X] Compile events.war" Java servlet
         #+BEGIN_SRC sh
           cd $GTS_HOME && ant events
         #+END_SRC
      2. [X] Install events.war TDW
         #+BEGIN_SRC sh
           sudo cp -v build/events.war $CATALINA_HOME/webapps
         #+END_SRC
      3. [X] Test the installation
         #+BEGIN_SRC sh
             cd /tmp && wget 'http://localhost:8080/events/data.json?a=demo&p=&d=demo'
         #+END_SRC
      4. [ ] http://localhost:8080/track/Track
	 + Account :: sysadmin
	 + User :: (blank)
	 + Password :: password
  14. [X] Create a device communication server
      1. [X] build the gpmrc servlet
         #+BEGIN_SRC sh
           cd $GTS_HOME && ant gprmc
         #+END_SRC
      2. [X] install gprmc.war
         #+BEGIN_SRC sh
           sudo cp -v build/gprmc.war $CATALINA_HOME/webapps           
         #+END_SRC
* LOGIN
** [[http://localhost:8080/track/Track]]
*** sysadmin
    - Account :: sysadmin
    - User :: (blank)
    - Password :: password
*** select accountID, password from Account;     
* LINKS
  - [[http://localhost:8080][http://localhost:8080]]
  - [[http://localhost:8080/track/Track]]
    - Account :: sysadmin
    - User :: (blank)
    - Password :: password
* Testing
** Send a data value with http client:
   #+BEGIN_SRC sh :tangle doit2.sh
     #!/bin/bash
     set -o nounset
     set -o verbose
     set -o errexit
     HOSTNAME=71.104.3.13
     DATA_URL="http://${HOSTNAME}:8080/gprmc/Data?"
     DATA_STRING='acct=demo&dev=demo&gprmc=$GPRMC,222820,A,3128.7540,N,14257.6714,W,000.0,000.0,271213,,*c'
     
     # wget 'http://71.104.3.13:8080/gprmc/Data?acct=demo&dev=demo&gprmc=$GPRMC,222820,A,3128.7540,N,14257.6714,W,000.0,000.0,271213,,*c'
     wget ${DATA_URL}${DATA_STRING}
   #+END_SRC
** Wget
   #+BEGIN_SRC sh :tangle doit3.sh
     wget 'http://71.104.3.13:8080/gprmc/Data?acct=troy&dev=tc&gprmc=$GPRMC,182840,A,3128.7540N,14257.6714,W,000.0,000.0,090114,,*a'
   #+END_SRC
* DEBUGGING
  1. sudo journalctl -f
* OPENGTS BUGS
** SEVERE: Servlet.service() for servlet [Data] in context with path [/gprmc] threw exception
jsvc.exec[203]: [INFO_|06/07 18:26:52|Data.logInfo:1517] gprmc: [192.168.1.1] GET: http://71.104.3.13:8080/gprmc/Data acct=audries&dev=7&gprmc=$GPRMC,012652.535,A,3404.93158,N,11743.33464,W,0.000000,0.000000,080614,,*18
jsvc.exec[203]: [INFO_|06/07 18:26:52|Transport.loadDeviceByTransportID:1666] Located Device 'audries/7' (using default Device transport)
jsvc.exec[203]: Jun 07, 2014 6:26:52 PM org.apache.catalina.core.StandardWrapperValve invoke
                SEVERE: Servlet.service() for servlet [Data] in context with path [/gprmc] threw exception
                java.lang.NullPointerException
                        at org.opengts.war.gprmc.Data._doWork(Data.java:1017)
                        at org.opengts.war.gprmc.Data.doGet(Data.java:874)
                        at javax.servlet.http.HttpServlet.service(HttpServlet.java:620)
                        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
                        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
                        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
                        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
                        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
                        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
                        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
                        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
                        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)
                        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
                        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
                        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)
                        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
                        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
                        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)
                        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)
                        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:314)
                        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
                        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
                        at org.apache.tomc
                        at.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
                        at java.lang.Thread.run(Thread.java:744)
** at org.opengts.war.gprmc.Data._doWork(Data.java:1017)
   - file:/usr/local/OpenGTS_2.5.5/src/org/opengts/war/gprmc/Data.java
** at org.opengts.war.gprmc.Data.doGet(Data.java:874)
